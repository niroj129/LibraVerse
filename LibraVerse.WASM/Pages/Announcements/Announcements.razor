@page "/announcements"

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col">
            <h1 class="display-6 fw-bold text-primary mb-0">
                <i class="bi bi-bell-fill me-2"></i>Announcements
            </h1>
            <p class="text-muted">Stay updated with the latest news, events, and offers</p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card shadow-sm border-0 sticky-top" style="top: 20px;">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0">Filter</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Type</label>
                        <div class="d-flex flex-column gap-2">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="all-types" checked="@(selectedTypes.Count == 0)" @onchange="() => ToggleAllTypes()" />
                                <label class="form-check-label" for="all-types">All Types</label>
                            </div>
                            @foreach (var type in availableTypes)
                            {
                                var typeName = type;
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="type-@type.ToLower()" 
                                           checked="@(selectedTypes.Contains(type))" 
                                           @onchange="() => ToggleType(typeName)" />
                                    <label class="form-check-label" for="type-@type.ToLower()">@type</label>
                                </div>
                            }
                        </div>
                    </div>
                    <hr />
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <div class="d-flex flex-column gap-2">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="status" id="status-all" 
                                       checked="@(statusFilter == "")" 
                                       @onchange='() => SetStatusFilter("")' />
                                <label class="form-check-label" for="status-all">All</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="status" id="status-active" 
                                       checked="@(statusFilter == "active")" 
                                       @onchange='() => SetStatusFilter("active")' />
                                <label class="form-check-label" for="status-active">Active</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="status" id="status-upcoming" 
                                       checked="@(statusFilter == "upcoming")" 
                                       @onchange='() => SetStatusFilter("upcoming")' />
                                <label class="form-check-label" for="status-upcoming">Upcoming</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            @if (isLoading)
            {
                <div class="d-flex justify-content-center align-items-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if (filteredAnnouncements == null || filteredAnnouncements.Count == 0)
            {
                <div class="card shadow-sm border-0">
                    <div class="card-body text-center py-5">
                        <div class="empty-announcements-icon mb-4">
                            <i class="bi bi-megaphone text-muted"></i>
                        </div>
                        <h3 class="text-muted">No announcements found</h3>
                        <p class="text-muted mb-4">There are no announcements matching your filters.</p>
                        <button class="btn btn-primary" @onclick="ResetFilters">
                            <i class="bi bi-arrow-counterclockwise me-2"></i>Reset Filters
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="announcement-grid">
                    @foreach (var announcement in filteredAnnouncements)
                    {
                        <div class="card shadow-sm border-0 announcement-card mb-4">
                            <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <div class="announcement-icon me-3 @GetAnnouncementTypeClass(announcement.Type)">
                                        <i class="bi @GetAnnouncementTypeIcon(announcement.Type)"></i>
                                    </div>
                                    <h5 class="mb-0">@announcement.Title</h5>
                                </div>
                                <span class="badge @GetAnnouncementTypeBadgeClass(announcement.Type)">@announcement.Type</span>
                            </div>
                            <div class="card-body">
                                <div class="mb-3">
                                    <p class="card-text">@announcement.Description</p>
                                </div>
                                
                                @if (announcement.Book != null)
                                {
                                    <div class="book-offer-section p-3 mb-3 rounded">
                                        <div class="d-flex">
                                            @if (!string.IsNullOrEmpty(announcement.Book.CoverImage))
                                            {
                                                <img src="https://localhost:7115/images/@announcement.Book.CoverImage" class="announcement-book-cover me-3" alt="@announcement.Book.Title">
                                            }
                                            else
                                            {
                                                <div class="announcement-book-cover-placeholder me-3 d-flex align-items-center justify-content-center bg-light">
                                                    <i class="bi bi-book text-muted"></i>
                                                </div>
                                            }
                                            <div>
                                                <h6 class="mb-1">@announcement.Book.Title</h6>
                                                <p class="text-muted small mb-2">@(string.Join(", ", announcement.Book.Authors.Select(a => a.Name)))</p>
                                                <div class="mb-2">
                                                    <span class="badge bg-primary">@announcement.Book.Format.Title</span>
                                                    <span class="badge bg-secondary">@announcement.Book.Genre</span>
                                                </div>
                                                <div>
                                                    @if (announcement.Book.Discount != null && announcement.Book.Discount.MarkAsSale && announcement.Book.Discount.EndDate > DateTime.Now)
                                                    {
                                                        <span class="text-decoration-line-through text-muted me-2">Rs @announcement.Book.Price.ToString("0.00")</span>
                                                        <span class="fw-bold text-danger">Rs @((announcement.Book.Price * (1 - announcement.Book.Discount.DiscountPercentage / (double)100m)).ToString("0.00"))</span>
                                                        <span class="badge bg-danger ms-2">@($"{announcement.Book.Discount.DiscountPercentage:0}% OFF")</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="fw-bold">$@announcement.Book.Price.ToString("0.00")</span>
                                                    }
                                                </div>
                                                <button class="btn btn-sm btn-primary mt-2" @onclick="() => NavigateToBook(announcement.Book.Id)">
                                                    <i class="bi bi-eye me-1"></i> View Book
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                }
                                
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="announcement-dates">
                                        <small class="text-muted">
                                            @announcement.StartDate.ToString("MMM d, yyyy") - @announcement.EndDate.ToString("MMM d, yyyy")
                                        </small>
                                    </div>
                                    @{
                                        var now = DateTime.Now;
                                        var status = now < announcement.StartDate ? "Upcoming" : 
                                                    now > announcement.EndDate ? "Expired" : "Active";
                                        var statusClass = status switch
                                        {
                                            "Active" => "bg-success",
                                            "Upcoming" => "bg-info",
                                            _ => "bg-danger"
                                        };
                                    }
                                    <span class="badge @statusClass">@status</span>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                            <button class="page-link" @onclick="() => ChangePage(currentPage - 1)" disabled="@(currentPage <= 1)">
                                <i class="bi bi-chevron-left"></i>
                            </button>
                        </li>
                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            var pageNumber = i;
                            <li class="page-item @(currentPage == pageNumber ? "active" : "")">
                                <button class="page-link" @onclick="() => ChangePage(pageNumber)">@pageNumber</button>
                            </li>
                        }
                        <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                            <button class="page-link" @onclick="() => ChangePage(currentPage + 1)" disabled="@(currentPage >= totalPages)">
                                <i class="bi bi-chevron-right"></i>
                            </button>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<style>
    .empty-announcements-icon {
        font-size: 5rem;
        color: #dee2e6;
    }

    .announcement-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
    }

    .announcement-icon.bg-info {
        background-color: #0dcaf0;
    }

    .announcement-icon.bg-warning {
        background-color: #ffc107;
    }

    .announcement-icon.bg-success {
        background-color: #198754;
    }

    .announcement-icon.bg-danger {
        background-color: #dc3545;
    }

    .announcement-icon.bg-primary {
        background-color: #0d6efd;
    }

    .announcement-book-cover {
        width: 100px;
        height: 140px;
        object-fit: cover;
        border-radius: 4px;
    }

    .announcement-book-cover-placeholder {
        width: 100px;
        height: 140px;
        border-radius: 4px;
    }

    .book-offer-section {
        background-color: #f8f9fa;
        border-left: 4px solid #0d6efd;
    }

    .announcement-card {
        transition: transform 0.3s ease;
    }

    .announcement-card:hover {
        transform: translateY(-5px);
    }
</style>