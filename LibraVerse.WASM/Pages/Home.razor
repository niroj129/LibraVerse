@page "/home"

<div class="landing-page">
    <div class="hero-section mb-5">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <h1 class="hero-title">Discover Your Next <span class="text-primary">Favorite Book</span></h1>
                    <p class="hero-subtitle mb-4">Explore our vast collection of books across all genres and formats.</p>
                    <div class="search-container mb-4">
                        <div class="input-group">
                            <input type="text" class="form-control form-control-lg" placeholder="Search by title, author, or genre..." 
                                   @bind="searchQuery" @bind:event="oninput" @onkeyup="HandleSearchKeyUp" />
                            <button class="btn btn-primary" type="button" @onclick="ApplySearch">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="d-flex flex-wrap gap-2">
                        @foreach (var genre in popularGenres)
                        {
                            <button class="btn btn-outline-primary btn-sm" @onclick="() => QuickFilterByGenre(genre)">
                                @genre
                            </button>
                        }
                    </div>
                </div>
                <div class="col-lg-6 d-none d-lg-block">
                    <div class="hero-image-container">
                        <div class="book-stack">
                            @for (int i = 0; i < 5; i++)
                            {
                                var rotation = (i - 2) * 10;
                                var translateY = i * 5;
                                var zIndex = 5 - i;
                                var opacity = 1 - (i * 0.15);
                                
                                <div class="book-cover" style="transform: rotate(@(rotation)deg) translateY(@(translateY)px); z-index: @zIndex; opacity: @opacity">
                                    @if (featuredBooks != null && featuredBooks.Count > i)
                                    {
                                        if (!string.IsNullOrEmpty(featuredBooks[i].CoverImage))
                                        {
                                            <img src="https://localhost:7115/images/@featuredBooks[i].CoverImage" alt="@featuredBooks[i].Title" />
                                        }
                                        else
                                        {
                                            <div class="placeholder-cover d-flex align-items-center justify-content-center">
                                                <i class="bi bi-book text-muted"></i>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <div class="placeholder-cover d-flex align-items-center justify-content-center">
                                            <i class="bi bi-book text-muted"></i>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container-fluid">
        <!-- Category Tabs -->
        <div class="category-tabs mb-4">
            <ul class="nav nav-pills nav-fill">
                @foreach (var tab in tabs)
                {
                    <li class="nav-item">
                        <button class="nav-link @(currentTab == tab.Key ? "active" : "")" @onclick="() => ChangeTab(tab.Key)">
                            <i class="bi @tab.Icon me-2"></i>@tab.Name
                        </button>
                    </li>
                }
            </ul>
        </div>

        <!-- Filters and Books -->
        <div class="row">
            <!-- Filters Sidebar -->
            <div class="col-lg-3 mb-4">
                <div class="card shadow-sm border-0 sticky-top" style="top: 20px;">
                    <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Filters</h5>
                        <button class="btn btn-sm btn-outline-secondary" @onclick="ResetFilters">
                            <i class="bi bi-arrow-counterclockwise me-1"></i> Reset
                        </button>
                    </div>
                    <div class="card-body">
                        <!-- Format Filter -->
                        <div class="mb-4">
                            <h6 class="filter-title">Format</h6>
                            @if (isLoadingFormats)
                            {
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border spinner-border-sm text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </div>
                            }
                            else if (formats == null || formats.Count == 0)
                            {
                                <p class="text-muted small">No formats available</p>
                            }
                            else
                            {
                                <div class="d-flex flex-column gap-2">
                                    @foreach (var format in formats)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="format-@format.Id" 
                                                   checked="@(selectedFormatIds.Contains(format.Id))" 
                                                   @onchange="() => ToggleFormat(format.Id)" />
                                            <label class="form-check-label" for="format-@format.Id">
                                                @format.Title
                                            </label>
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                        <!-- Publication Filter -->
                        <div class="mb-4">
                            <h6 class="filter-title">Publication</h6>
                            @if (isLoadingPublications)
                            {
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border spinner-border-sm text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </div>
                            }
                            else if (publications == null || publications.Count == 0)
                            {
                                <p class="text-muted small">No publications available</p>
                            }
                            else
                            {
                                <div class="d-flex flex-column gap-2">
                                    @foreach (var publication in publications)
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" id="publication-@publication.Id" 
                                                   checked="@(selectedPublicationIds.Contains(publication.Id))" 
                                                   @onchange="() => TogglePublication(publication.Id)" />
                                            <label class="form-check-label" for="publication-@publication.Id">
                                                @publication.Title
                                            </label>
                                        </div>
                                    }
                                </div>
                            }
                        </div>

                        <!-- Availability Filter -->
                        <div class="mb-4">
                            <h6 class="filter-title">Availability</h6>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="availability" id="availability-all" 
                                       checked="@(availabilityFilter == null)" 
                                       @onchange="() => SetAvailabilityFilter(null)" />
                                <label class="form-check-label" for="availability-all">
                                    All
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="availability" id="availability-available" 
                                       checked="@(availabilityFilter == true)" 
                                       @onchange="() => SetAvailabilityFilter(true)" />
                                <label class="form-check-label" for="availability-available">
                                    In Stock
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="availability" id="availability-unavailable" 
                                       checked="@(availabilityFilter == false)" 
                                       @onchange="() => SetAvailabilityFilter(false)" />
                                <label class="form-check-label" for="availability-unavailable">
                                    Out of Stock
                                </label>
                            </div>
                        </div>

                        <!-- Price Range Filter -->
                        <div class="mb-4">
                            <h6 class="filter-title">Price Range</h6>
                            <div class="d-flex align-items-center gap-2 mb-2">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-text">Rs</span>
                                    <input type="number" class="form-control" placeholder="Min" 
                                           @bind="minPrice" @bind:event="oninput" />
                                </div>
                                <span>-</span>
                                <div class="input-group input-group-sm">
                                    <span class="input-group-text">Rs</span>
                                    <input type="number" class="form-control" placeholder="Max" 
                                           @bind="maxPrice" @bind:event="oninput" />
                                </div>
                            </div>
                            <button class="btn btn-sm btn-primary w-100" @onclick="ApplyPriceFilter">
                                Apply
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Books Grid -->
            <div class="col-lg-9">
                <!-- Sort Options -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        @if (books?.Items != null)
                        {
                            <p class="mb-0 text-muted">
                                Showing @(((books.Page - 1) * books.PageSize) + 1) to @Math.Min(books.Page * books.PageSize, books.TotalCount) of @books.TotalCount books
                            </p>
                        }
                    </div>
                    <div class="d-flex align-items-center gap-2">
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-secondary @(viewMode == "grid" ? "active" : "")" @onclick='() => SetViewMode("grid")'>
                                <i class="bi bi-grid"></i>
                            </button>
                            <button type="button" class="btn btn-outline-secondary @(viewMode == "list" ? "active" : "")" @onclick='() => SetViewMode("list")'>
                                <i class="bi bi-list-ul"></i>
                            </button>
                        </div>
                    </div>
                </div>

                @if (isLoadingBooks)
                {
                    <div class="d-flex justify-content-center align-items-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                }
                else if (books?.Items == null || books.Items.Count == 0)
                {
                    <div class="card shadow-sm border-0">
                        <div class="card-body text-center py-5">
                            <div class="empty-books-icon mb-4">
                                <i class="bi bi-book text-muted"></i>
                            </div>
                            <h3 class="text-muted">No books found</h3>
                            <p class="text-muted mb-4">Try adjusting your filters or search criteria.</p>
                            <button class="btn btn-primary" @onclick="ResetFilters">
                                <i class="bi bi-arrow-counterclockwise me-2"></i>Reset Filters
                            </button>
                        </div>
                    </div>
                }
                else
                {
                    @if (viewMode == "grid")
                    {
                        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-4">
                            @foreach (var book in books.Items)
                            {
                                <div class="col">
                                    <div class="card h-100 book-card shadow-sm border-0">
                                        <div class="position-relative">
                                            @if (!string.IsNullOrEmpty(book.CoverImage))
                                            {
                                                <img src="https://localhost:7115/images/@book.CoverImage" class="card-img-top book-cover" alt="@book.Title">
                                            }
                                            else
                                            {
                                                <div class="card-img-top book-cover-placeholder d-flex align-items-center justify-content-center">
                                                    <i class="bi bi-book text-muted" style="font-size: 3rem;"></i>
                                                </div>
                                            }
                                            
                                            @if (book.Discount != null && book.Discount.MarkAsSale && book.Discount.EndDate > DateTime.Now)
                                            {
                                                <div class="discount-badge">
                                                    <span>@book.Discount.DiscountPercentage%</span>
                                                    <span>OFF</span>
                                                </div>
                                            }
                                            
                                            @if (!book.IsAvailable)
                                            {
                                                <div class="out-of-stock-overlay">
                                                    <span>Out of Stock</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="card-body d-flex flex-column">
                                            <div class="d-flex justify-content-between align-items-start mb-2">
                                                <span class="badge bg-primary">@book.Format.Title</span>
                                                <div class="d-flex align-items-center">
                                                    <i class="bi bi-star-fill text-warning me-1"></i>
                                                    <span>@(book.Reviews.Any() ? book.Reviews.Average(r => r.Rating).ToString("0.0") : "N/A")</span>
                                                </div>
                                            </div>
                                            <h5 class="card-title book-title mb-1">@book.Title</h5>
                                            <p class="card-text text-muted small mb-2">
                                                by @(string.Join(", ", book.Authors.Select(a => a.Name)))
                                            </p>
                                            <p class="card-text book-description mb-3">
                                                @(book.Description.Length > 100 ? book.Description.Substring(0, 100) + "..." : book.Description)
                                            </p>
                                            <div class="mt-auto">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <span class="badge bg-secondary">@book.Genre</span>
                                                </div>
                                                <div class="d-flex gap-2">
                                                    <button class="btn btn-primary flex-grow-1" @onclick="() => NavigateToBookDetails(book.Id)">
                                                        <i class="bi bi-eye me-1"></i> View
                                                    </button>
                                                    <button class="btn btn-outline-primary" @onclick="() => AddToCart(book)" disabled="@(!book.IsAvailable)">
                                                        <i class="bi bi-cart-plus"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" @onclick="() => AddToWishlist(book)">
                                                        <i class="bi @(book.IsAddedToWishlist ? "bi-heart-fill" : "bi-heart")"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="mb-4">
                            @foreach (var book in books.Items)
                            {
                                <div class="card mb-3 book-list-card shadow-sm border-0">
                                    <div class="row g-0">
                                        <div class="col-md-3 position-relative">
                                            @if (!string.IsNullOrEmpty(book.CoverImage))
                                            {
                                                <img src="https://localhost:7115/images/@book.CoverImage" class="img-fluid book-list-cover h-100" alt="@book.Title">
                                            }
                                            else
                                            {
                                                <div class="book-list-cover-placeholder d-flex align-items-center justify-content-center h-100">
                                                    <i class="bi bi-book text-muted" style="font-size: 3rem;"></i>
                                                </div>
                                            }
                                            
                                            @if (book.Discount != null && book.Discount.MarkAsSale && book.Discount.EndDate > DateTime.Now)
                                            {
                                                <div class="discount-badge">
                                                    <span>@book.Discount.DiscountPercentage%</span>
                                                    <span>OFF</span>
                                                </div>
                                            }
                                            
                                            @if (!book.IsAvailable)
                                            {
                                                <div class="out-of-stock-overlay">
                                                    <span>Out of Stock</span>
                                                </div>
                                            }
                                        </div>
                                        <div class="col-md-9">
                                            <div class="card-body">
                                                <div class="d-flex justify-content-between align-items-start mb-2">
                                                    <div>
                                                        <span class="badge bg-primary me-2">@book.Format.Title</span>
                                                        <span class="badge bg-secondary">@book.Genre</span>
                                                    </div>
                                                    <div class="d-flex align-items-center">
                                                        <i class="bi bi-star-fill text-warning me-1"></i>
                                                        <span>@(book.Reviews.Any() ? book.Reviews.Average(r => r.Rating).ToString("0.0") : "N/A")</span>
                                                    </div>
                                                </div>
                                                <h5 class="card-title mb-1">@book.Title</h5>
                                                <p class="card-text text-muted mb-2">
                                                    by @(string.Join(", ", book.Authors.Select(a => a.Name)))
                                                </p>
                                                <p class="card-text mb-3">
                                                    @(book.Description.Length > 200 ? book.Description.Substring(0, 200) + "..." : book.Description)
                                                </p>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div>
                                                        @if (book.Discount != null && book.Discount.MarkAsSale && book.Discount.EndDate > DateTime.Now)
                                                        {
                                                            <span class="text-decoration-line-through text-muted me-2">Rs @book.Price.ToString("0.00")</span>
                                                            <span class="fw-bold text-danger fs-5">Rs @((book.Price * (1 - book.Discount.DiscountPercentage / (double)100m)).ToString("0.00"))</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="fw-bold fs-5">Rs @book.Price.ToString("0.00")</span>
                                                        }
                                                    </div>
                                                    <div class="d-flex gap-2">
                                                        <button class="btn btn-primary" @onclick="() => NavigateToBookDetails(book.Id)">
                                                            <i class="bi bi-eye me-1"></i> View
                                                        </button>
                                                        <button class="btn btn-outline-primary" @onclick="() => AddToCart(book)" disabled="@(!book.IsAvailable)">
                                                            <i class="bi bi-cart-plus"></i>
                                                        </button>
                                                        <button class="btn btn-outline-danger" @onclick="() => AddToWishlist(book)">
                                                            <i class="bi @(book.IsAddedToWishlist ? "bi-heart-fill" : "bi-heart")"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }

                    <!-- Pagination -->
                    <nav aria-label="Page navigation" class="d-flex justify-content-center">
                        <ul class="pagination">
                            <li class="page-item @(books.Page <= 1 ? "disabled" : "")">
                                <button class="page-link" @onclick="() => ChangePage(books.Page - 1)" disabled="@(books.Page <= 1)">
                                    <i class="bi bi-chevron-left"></i>
                                </button>
                            </li>
                            @for (int i = Math.Max(1, books.Page - 2); i <= Math.Min(Math.Ceiling((double)books.TotalCount / books.PageSize), books.Page + 2); i++)
                            {
                                var pageNumber = i;
                                <li class="page-item @(books.Page == pageNumber ? "active" : "")">
                                    <button class="page-link" @onclick="() => ChangePage(pageNumber)">@pageNumber</button>
                                </li>
                            }
                            <li class="page-item @(books.Page >= Math.Ceiling((double)books.TotalCount / books.PageSize) ? "disabled" : "")">
                                <button class="page-link" @onclick="() => ChangePage(books.Page + 1)" disabled="@(books.Page >= Math.Ceiling((double)books.TotalCount / books.PageSize))">
                                    <i class="bi bi-chevron-right"></i>
                                </button>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .landing-page {
        background-color: #f8f9fa;
        min-height: 100vh;
    }

    .hero-section {
        background-color: white;
        padding: 4rem 0;
        border-bottom: 1px solid rgba(0,0,0,0.05);
    }

    .hero-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 1rem;
    }

    .hero-subtitle {
        font-size: 1.25rem;
        color: #6c757d;
    }

    .hero-image-container {
        position: relative;
        height: 300px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .book-stack {
        position: relative;
        width: 200px;
        height: 300px;
    }

    .book-cover {
        position: absolute;
        width: 200px;
        height: 300px;
        border-radius: 5px;
        box-shadow: 0 10px 20px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        overflow: hidden;
    }

    .book-cover img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .placeholder-cover {
        width: 100%;
        height: 100%;
        background-color: #e9ecef;
        font-size: 3rem;
    }

    .category-tabs .nav-link {
        color: #495057;
        border-radius: 0.5rem;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
    }

    .category-tabs .nav-link:hover:not(.active) {
        background-color: #f8f9fa;
    }

    .category-tabs .nav-link.active {
        background-color: #0d6efd;
        color: white;
    }

    .filter-title {
        font-weight: 600;
        margin-bottom: 1rem;
        color: #495057;
        border-bottom: 1px solid #e9ecef;
        padding-bottom: 0.5rem;
    }

    .book-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
    }

    .book-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }

    .book-cover {
        height: 300px;
        object-fit: cover;
    }

    .book-cover-placeholder {
        height: 300px;
        background-color: #e9ecef;
    }

    .book-list-cover {
        object-fit: cover;
        border-top-left-radius: 0.375rem;
        border-bottom-left-radius: 0.375rem;
    }

    .book-list-cover-placeholder {
        background-color: #e9ecef;
        border-top-left-radius: 0.375rem;
        border-bottom-left-radius: 0.375rem;
    }

    .book-title {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .book-description {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
        color: #6c757d;
    }

    .discount-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background-color: #dc3545;
        color: white;
        padding: 0.5rem;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        font-size: 0.8rem;
        line-height: 1;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    }

    .out-of-stock-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
        font-weight: bold;
        font-size: 1.25rem;
    }

    .empty-books-icon {
        font-size: 5rem;
        color: #dee2e6;
    }

</style>